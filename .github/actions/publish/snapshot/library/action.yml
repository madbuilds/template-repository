name: publish SNAPSHOT-LIBRARY
description: deploys library to maven repository

inputs:
  settings_path:
    description: 'maven settings.xml path'
    required: false
    default: .github/maven/settings.xml
  github_repository:
    description: github repository id
    required: false
    default: ${{ github.repository }}
  github_actor:
    description: actor to use
    required: false
    default: ${{ github.actor }}
  github_token:
    description: GitHub token
    required: false
    default: '${{ github.token }}'

runs:
  using: composite
  steps:
    - id: github
      shell: bash
      run: |
        if [ -n "${{ inputs.github_token }}" ]; then
          echo "token=${{ inputs.github_token }}" >> $GITHUB_OUTPUT
        else
          if [ -n "${{ env.GITHUB_TOKEN }}" ]; then
            echo "token=${{ env.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          else
            echo "::error::ERROR: GITHUB_TOKEN is not set"
            exit 1
          fi
        fi

    - name: SETUP Java21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'oracle'
        cache: maven

    - name: PRE_DOWNLOAD dependencies
      shell: bash
      run: |
        echo ""
        echo "========== PRE_DOWNLOAD dependencies =========="
        echo ""
        mvn dependency:go-offline --settings ${{ inputs.settings_path }}
      env:
        GITHUB_ACTOR: ${{ inputs.github_actor }}
        GITHUB_TOKEN: ${{ steps.github.outputs.token }}
        GITHUB_REPOSITORY: ${{ inputs.github_repository }}

    - name: UPDATE pom version
      shell: bash
      run: |
        echo ""
        echo "========== UPDATE pom version =========="
        echo ""
        POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        POM_VERSION=${POM_VERSION/-SNAPSHOT/}
        TIMESTAMP=$(date +'%Y%m%d-%H%M')
        BRANCH_NAME=${{ github.ref_name }}
        BRANCH_NAME=${BRANCH_NAME//\//-}
        
        SNAPSHOT_VERSION=${BRANCH_NAME}-SNAPSHOT
        echo "SNAPSHOT version(for: $POM_VERSION - $TIMESTAMP): ${SNAPSHOT_VERSION}"
        
        mvn versions:set -DnewVersion=${SNAPSHOT_VERSION} --settings ${{ inputs.settings_path }}
      env:
        GITHUB_ACTOR: ${{ inputs.github_actor }}
        GITHUB_TOKEN: ${{ steps.github.outputs.token }}
        GITHUB_REPOSITORY: ${{ inputs.github_repository }}

    - name: BUILD and PUBLISH
      shell: bash
      run: |
        echo ""
        echo "========== BUILD and PUBLISH =========="
        echo ""
        mvn --batch-mode deploy --settings ${{ inputs.settings_path }}
      env:
        GITHUB_ACTOR: ${{ inputs.github_actor }}
        GITHUB_TOKEN: ${{ steps.github.outputs.token }}
        GITHUB_REPOSITORY: ${{ inputs.github_repository }}