# File .github/workflows/secrets-update.yml
# DESCRIPTION: repos cannot use ORGANIZATION's secrets/vars on the free organization plan
#              as is a workaround, this action sync's repo secrets with a list of repositories
# ${secrets.MADBUILDS_TEMPLATE_SECRETS_SYNC_PAT} - required to have "repo" access for USER_PAT token

on:
  workflow_dispatch:

env:
  OWNER_NAME: "madbuilds"
  REPOSITORIES: >
    \"app-logging\",
    \"sbot\" \

jobs:
  setup:
    if: ${{ startsWith(github.repository, 'madbuilds/template-') }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.project }}
    steps:
      - name: Setup
        id: matrix
        run: |
          echo "project=[ ${{ env.REPOSITORIES }} ]" >> $GITHUB_OUTPUT
  update:
    needs:
      - setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJSON(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: update variables
        run: |
          gh variable set TEST_VAR --body "Set from workflow" --repo https://github.com/${{ env.OWNER_NAME }}/${{ matrix.project }}
        env:
          GITHUB_TOKEN: ${{ secrets.USER_PAT_FULL }}
      - name: update secrets
        run: |
          # CREATE DEPLOYMENT ENV (IF NOT EXIST)
          if gh api repos/${{ env.OWNER_NAME }}/${{ matrix.project }}/environments/TEST --jq '.name' >/dev/null 2>&1; then
            echo "TEST: environment already exist"
          else
            echo "TEST: creating environment"
            gh api --method PUT \
              -H "Accept: application/vnd.github+json" \
              repos/${{ env.OWNER_NAME }}/${{ matrix.project }}/environments/TEST
            echo ""
          
            echo "TEST: set reviewers"
            gh api --method PUT \
              -H "Accept: application/vnd.github.v3+json" \
              repos/${{ env.OWNER_NAME }}/${{ matrix.project }}/environments/TEST \
              -f reviewers='["ChroniKom"]'
          fi
          
          # SSH DEV CONNECTION DETAILS SECRETS
          echo "TEST: set secrets (env)"
          gh secret set MADBUILDS_SSH_PRIVATE_HOST  --env TEST --body ${{ secrets.MADBUILDS_SSH_DEV_PRIVATE_HOST }}  --repo https://github.com/${{ env.OWNER_NAME }}/${{ matrix.project }}
          gh secret set MADBUILDS_SSH_PRIVATE_PORT  --env TEST --body ${{ secrets.MADBUILDS_SSH_DEV_PRIVATE_PORT }}  --repo https://github.com/${{ env.OWNER_NAME }}/${{ matrix.project }}
          gh secret set MADBUILDS_SSH_PRIVATE_USER  --env TEST --body ${{ secrets.MADBUILDS_SSH_DEV_PRIVATE_USER }}  --repo https://github.com/${{ env.OWNER_NAME }}/${{ matrix.project }}
          gh secret set MADBUILDS_SSH_PRIVATE_KEY   --env TEST --repo https://github.com/${{ env.OWNER_NAME }}/${{ matrix.project }} < <(cat <<EOF
          ${{ secrets.MADBUILDS_SSH_DEV_PRIVATE_KEY }}
          EOF
          )
          
          # SYNC_APP AUTHORIZATION DETAILS SECRETS
          echo "TEST: set secrets (sync)"
          gh secret set MADBUILDS_SYNCAPP_APP_ID        --body ${{ secrets.MADBUILDS_SYNCAPP_APP_ID }}        --repo https://github.com/${{ env.OWNER_NAME }}/${{ matrix.project }}
          gh secret set MADBUILDS_SYNCAPP_CLIENT_ID     --body ${{ secrets.MADBUILDS_SYNCAPP_CLIENT_ID }}     --repo https://github.com/${{ env.OWNER_NAME }}/${{ matrix.project }}
          gh secret set MADBUILDS_SYNCAPP_CLIENT_SECRET --body ${{ secrets.MADBUILDS_SYNCAPP_CLIENT_SECRET }} --repo https://github.com/${{ env.OWNER_NAME }}/${{ matrix.project }}
          gh secret set MADBUILDS_SYNCAPP_PRIVATE_KEY   --repo https://github.com/${{ env.OWNER_NAME }}/${{ matrix.project }} < <(cat <<EOF
          ${{ secrets.MADBUILDS_SYNCAPP_PRIVATE_KEY }}
          EOF
          )
        env:
          GITHUB_TOKEN: ${{ secrets.USER_PAT_FULL }}