# File .github/workflows/publish-snapshot.yml

# Runs on push to branches (/feature/hotfix/)
# this workflow publishes SNAPSHOT maven artifact

name: publish SNAPSHOT
on:
  push:
    branches:
      - 'master'
      - 'feature/**'
      - 'hotfix/**'
  workflow_dispatch:

env:
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
  MAVEN_SETTINGS_PATH: .github/maven/settings.xml

  GITHUB_ACTOR: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REPOSITORY: ${{ github.repository }}

  GITHUB_ACTIONS_NAME: github-actions[bot]
  GITHUB_ACTIONS_MAIL: github-actions[bot]@users.noreply.github.com

jobs:
  check-commit:
    if: ${{ !startsWith(github.repository, 'madbuilds/template-') }}
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}

    steps:
      - uses: actions/checkout@v4
      - name: CHECK author
        id: check
        run: |
          COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
          if [[ "$COMMIT_AUTHOR" == "${{ env.GITHUB_ACTIONS_NAME }}" ]]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "SKIP: SNAPSHOT publication not required"
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

  publish-snapshot:
    needs: check-commit
    if: needs.check-commit.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: SETUP Java21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'
          cache: maven

      - name: PRE_DOWNLOAD dependencies
        run: mvn dependency:go-offline --settings ${{ env.MAVEN_SETTINGS_PATH }}

      - name: UPDATE pom version
        run: |
          POM_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          POM_VERSION=${POM_VERSION/-SNAPSHOT/}
          TIMESTAMP=$(date +'%Y%m%d-%H%M')
          BRANCH_NAME=${{ github.ref_name }}
          BRANCH_NAME=${BRANCH_NAME//\//-}
          
          SNAPSHOT_VERSION=${BRANCH_NAME}-SNAPSHOT
          echo "SNAPSHOT version(for: $POM_VERSION - $TIMESTAMP): ${SNAPSHOT_VERSION}"
          
          mvn versions:set -DnewVersion=${SNAPSHOT_VERSION} --settings ${{ env.MAVEN_SETTINGS_PATH }}

      - name: BUILD and PUBLISH
        run: mvn --batch-mode deploy --settings ${{ env.MAVEN_SETTINGS_PATH }}